name: Continuous Integration with Github Actions

on:
  push:
    branches: 
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Setup Java JDK
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven
    
    - name: Build Application Jar
      working-directory: ./24_ContinuousIntegrationWithAWS/rest-with-spring-boot-and-kotlin-erudio
      run: mvn clean package
    
    - name: Docker Compose Build
      working-directory: ./24_ContinuousIntegrationWithAWS/
      run: docker compose build

    - name: Tag and push image to Amazon ECR
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest ${{ secrets.ECR_IMAGE_REPO_URL }}:${{github.run_id}}
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest ${{ secrets.ECR_IMAGE_REPO_URL }}:latest

        docker push ${{ secrets.ECR_IMAGE_REPO_URL }}:${{github.run_id}}
        docker push ${{ secrets.ECR_IMAGE_REPO_URL }}:latest

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{ secrets.TASK_DEFINITION_NAME }} --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ secrets.CONTAINER_NAME }}
        image: ${{ secrets.ECR_IMAGE_REPO_URL }}:latest

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ secrets.SERVICE_NAME }}
        cluster: ${{ secrets.CLUSTER_NAME }}
        wait-for-service-stability: true

    - name: Push to Docker Hub Container registry
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:${{github.run_id}}
        
        docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:${{github.run_id}}
        docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest

